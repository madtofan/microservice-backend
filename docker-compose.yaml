version: "3.8"
services:
  api-endpoint:
    build:
      context: .
      dockerfile: ./api-endpoint/Dockerfile
    platform: "linux/amd64"
    env_file:
      - ./.env.api-endpoint
    ports:
      - "${API_ENDPOINT_PORT}:${API_ENDPOINT_PORT}"
    depends_on:
      - user
      - email
      - templating
      - notification
    environment:
      - SERVICE_URL=[::0]
      - SERVICE_PORT=${API_ENDPOINT_PORT}
      - USER_HOST=http://host.docker.internal
      - USER_PORT=${USER_SERVICE_PORT}
      - EMAIL_HOST=http://host.docker.internal
      - EMAIL_PORT=${EMAIL_SERVICE_PORT}
      - TEMPLATING_HOST=http://host.docker.internal
      - TEMPLATING_PORT=${TEMPLATING_SERVICE_PORT}
      - NOTIFICATION_HOST=http://host.docker.internal
      - NOTIFICATION_PORT=${NOTIFICATION_SERVICE_PORT}
  user:
    build:
      context: .
      dockerfile: ./user/Dockerfile
    env_file:
      - ./.env.user
    platform: "linux/amd64"
    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
    depends_on:
      - database
    environment:
      - SERVICE_URL=[::0]
      - SERVICE_PORT=${USER_SERVICE_PORT}
  email:
    build:
      context: .
      dockerfile: ./email/Dockerfile
    platform: "linux/amd64"
    env_file:
      - ./.env.email
    ports:
      - "${EMAIL_SERVICE_PORT}:${EMAIL_SERVICE_PORT}"
    depends_on:
      - database
    environment:
      - SERVICE_URL=[::0]
      - SERVICE_PORT=${EMAIL_SERVICE_PORT}
  notification:
    build:
      context: .
      dockerfile: ./notification/Dockerfile
    platform: "linux/amd64"
    env_file:
      - ./.env.notification
    ports:
      - "${NOTIFICATION_SERVICE_PORT}:${NOTIFICATION_SERVICE_PORT}"
    depends_on:
      - database
    environment:
      - SERVICE_URL=[::0]
      - SERVICE_PORT=${NOTIFICATION_SERVICE_PORT}
  templating:
    build:
      context: .
      dockerfile: ./templating/Dockerfile
    platform: "linux/amd64"
    env_file:
      - ./.env.templating
    ports:
      - "${TEMPLATING_SERVICE_PORT}:${TEMPLATING_SERVICE_PORT}"
    depends_on:
      - database
    environment:
      - SERVICE_URL=[::0]
      - SERVICE_PORT=${TEMPLATING_SERVICE_PORT}
  database:
    image: postgres:16.0
    volumes:
      - ./multi-database:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_MULTIPLE_DATABASES=${POSTGRES_MULTIPLE_DATABASES}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
volumes:
  database:
    driver: local
